#spring.application.name=app_cardapio_back

####   Banco de dados em memória  ####
#spring.application.name=app_cardapio_back


spring.datasource.url=jdbc:h2:mem:testedb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=Le.328679
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

spring.jpa.show-sql=true
#http://localhost:8080/h2-console/

####   Banco de dados em memória  ####

#########################################################################

####   Banco de dados POSTGRESS  ####


#spring.datasource.url=jdbc:postgresql://localhost:5432/app-cardapio
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=Le.328679

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true


#########################################################################




#http://localhost:8080/h2-console/login.jsp?jsessionid=0e538e287e58f949136b8ae3af7b2c29
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.url=jdbc:postgresql://localhost:5432/app-cardapio
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.username=postgres
#spring.datasource.password=Le.328679
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect